import streamlit as st
import requests
import datetime

BASE_URL = "http://localhost:8000" 

st.set_page_config(
    page_title="🌍 AI Travel Planner",
    page_icon="🌍",
    layout="centered",
    initial_sidebar_state="expanded",
)

st.title("🌍 AI Travel Planner")

st.markdown("Plan your dream trip with the help of AI. Just fill in your details below!")

if "messages" not in st.session_state:
    st.session_state.messages = []

# Travel Planner Form
with st.form(key="travel_form"):
    st.subheader("🧳 Tell us about your trip")

    user_location = st.text_input("📍 Your Current Location", placeholder="e.g. Ahmedabad")
    destination = st.text_input("🌐 Destination", placeholder="e.g. Goa")
    
    col1, col2 = st.columns(2)
    with col1:
        start_date = st.date_input("🗓️ Start Date")
    with col2:
        end_date = st.date_input("🗓️ End Date")
    
    interests = st.text_area("🎯 Interests, Hobbies, or Special Requirements", placeholder="e.g. Beaches, Adventure, Food, Family-friendly...")

    submit_button = st.form_submit_button("✈️ Generate Travel Plan")

if submit_button:
    if not (user_location and destination and interests):
        st.warning("⚠️ Please fill in all the required details.")
    elif start_date > end_date:
        st.warning("⚠️ Start date cannot be after end date.")
    else:
        try:
            with st.spinner("Generating your personalized travel plan..."):
                user_query = (
                    f"Plan a trip from {user_location} to {destination} "
                    f"from {start_date.strftime('%Y-%m-%d')} to {end_date.strftime('%Y-%m-%d')}. "
                    f"My interests or preferences: {interests}"
                )
                payload = {"question": user_query}
                response = requests.post(f"{BASE_URL}/query", json=payload)

            if response.status_code == 200:
                answer = response.json().get("answer", "No answer returned.")
                markdown_content = f"""# 🌍 AI Travel Plan

**Generated:** {datetime.datetime.now().strftime('%Y-%m-%d at %H:%M')}  
**From:** {user_location}  
**To:** {destination}  
**Dates:** {start_date} to {end_date}  
**Preferences:** {interests}

---

{answer}

---

*🧠 Generated by AI. Please verify prices, timing, and other logistics before your journey.*
"""
                st.markdown(markdown_content)
            else:
                st.error("❌ Bot failed to respond: " + response.text)

        except Exception as e:
            st.error(f"❌ Something went wrong: {str(e)}")
